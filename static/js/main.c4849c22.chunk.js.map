{"version":3,"sources":["axios.js","Row.jsx","requests.js","Banner.jsx","Nav.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","key","id","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4849c22.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//base url to make requests to the movie database\r\nconst instance = axios.create({\r\n  baseURL: \"http://api.themoviedb.org/3\",\r\n});\r\n\r\n// example: instance.get(/some-movie) => https://developers.themoviedb.org/3/some-movie\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nimport axios from './axios';\r\n\r\nimport './Row.css';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/'\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        //if [], run once when row loads and dont run again\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = movie => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get('v'))\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='row' >\r\n\r\n            <h1>{title}</h1>\r\n            <div className=\"row__posters\">\r\n                {movies.map((movie) => (\r\n                    <img className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        alt={movie.name} key={movie.id} onClick={() => handleClick(movie)} />\r\n                ))}\r\n            </div>\r\n            {/* {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />} */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"377b79b45e27118439d9dfc1daef7b76\";\r\n\r\nconst requests = {\r\n  fetchNetflixOriginals: `/discover/tv/?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\n\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            )\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function truncate(str, n) {\r\n        return (str?.length > n) ? str.substr(0, n - 1) + '...;' : str;\r\n    };\r\n\r\n    console.log(movie);\r\n    return (\r\n        <header className='banner' style={{\r\n            backgroundSize: 'cover', backgroundImage: `url(\r\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`, backgroundPosition: 'center center'\r\n        }}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className='banner__title'>\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner__fadeBottom\"></div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState([])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true)\r\n            } else handleShow(false)\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll')\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && 'nav__black'}`}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\" alt=\"Netflix Logo\"\r\n                className=\"nav__logo\" />\r\n            < img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n                className='nav__avatar' alt='Netflix avatar' />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from \"react\";\nimport \"./App.css\";\n\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}